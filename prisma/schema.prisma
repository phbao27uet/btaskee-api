// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  name          String
  phone_number  String
  address       String
  refresh_token String?
  role          Role    @default(WORKER)
  department_id Int

  username String? @unique
  password String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Department Department @relation(fields: [department_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Supplier {
  id           Int      @id @default(autoincrement())
  name         String
  phone_number String
  email        String   @unique
  address      String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  Asset        Asset[]
}

model Asset {
  id            Int            @id @default(autoincrement())
  name          String
  // description   String
  asset_code    String
  depreciation_rate Float   @default(0)
  entry_time    DateTime
  entry_price   Int
  supplier_id   Int
  department_id Int?
  status        StatusAsset
  condition     ConditionAsset
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt

  Supplier   Supplier    @relation(fields: [supplier_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  Department Department? @relation(fields: [department_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  // AssetDepartment AssetDepartment[]
}

model Department {
  id      Int    @id @default(autoincrement())
  name    String
  address String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User[]
  Asset      Asset[] 
  // AssetDepartment AssetDepartment[]
}

// model AssetDepartment {
//   id            Int      @id @default(autoincrement())
//   asset_id      Int
//   department_id Int
//   created_at    DateTime @default(now())
//   updated_at    DateTime @updatedAt

//   Asset      Asset      @relation(fields: [asset_id], references: [id])
//   Department Department @relation(fields: [department_id], references: [id])
// }

enum Role {
  ADMIN
  WORKER
  MANAGER
}

enum StatusAsset {
  USED
  READY_TO_USE
  MAINTENANCE
}

enum ConditionAsset {
  GOOD
  BAD
  BROKEN
}
