include:
  - local: .gitlab/generate-env.ci.yml
  - local: .gitlab/login-registry.ci.yml
  - local: .gitlab/release.ci.yml

stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_STG: $CI_REGISTRY_IMAGE/stg

.build_template:
  stage: build
  interruptible: true
  # services:
  #   - docker:23.0.5-dind
  tags:
    # - docker-runner
    - shell
  before_script:
    # login to gitlab registry
    - !reference [.login-registry]
    # generate env file
    # - apk add --no-cache --upgrade bash
    - !reference [.generate-env]
  script:
    # pull latest image
    - docker pull $DOCKER_IMAGE:latest || true
    # build image
    - docker build --cache-from $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:latest .
    # push image to gitlab registry
    - !reference [.release]
  artifacts:
    paths:
      - docker-compose.dev.yml
      - .env

build-stg:
  extends: .build_template
  only:
    - staging
  interruptible: true
  variables:
    DOCKER_IMAGE: $DOCKER_IMAGE_STG
  environment: staging

# build-dev:
#   extends: .build_template
#   only:
#     - develop
#   interruptible: true
#   variables:
#     DOCKER_IMAGE: $DOCKER_IMAGE_DEV
#   environment: development

# .deploy_template:
#   stage: deploy
#   interruptible: true
#   variables:
#     GIT_STRATEGY: none
#   tags:
#     - ssh-dev3
#   before_script:
#     # login to gitlab registry
#     - !reference [.login-registry]
#     # generate env file
#     # - !reference [.generate-env]
#     - docker pull $DOCKER_IMAGE:latest

deploy-stg:
  stage: deploy
  environment: staging
  tags:
    - shell
  script:
    - scp docker-compose.dev.yml $USERNAME@$HOST:~/zen-system-api/docker-compose.dev.yml
    - scp .env $USERNAME@$HOST:~/zen-system-api/.env
    - ssh $USERNAME@$HOST
      "export CI_JOB_TOKEN=$CI_JOB_TOKEN;
      export DOCKER_IMAGE=$DOCKER_IMAGE_STG;
      export CI_REGISTRY=$CI_REGISTRY;
      export CI_REGISTRY_IMAGE=$DOCKER_IMAGE_STG;
      export APP_NAME=$APP_NAME;
      export PORT=$ZEN_PORT;
      export CI_REGISTRY_IMAGE=$DOCKER_IMAGE_STG;
      bash -s" < cd.sh development
  only:
    - staging
